name: Flag Explorer CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_NAME: flagexplorerregistry
  API_DOCKER_IMAGE: flagexplorer-api
  API_WEBAPP_NAME: flagexplorer-api

jobs:
  backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: .

      - name: Build Backend
        run: dotnet build --configuration Release --no-restore
        working-directory: .

      - name: Run Unit Tests
        run: dotnet test FlagExplorer.UnitTests/FlagExplorer.UnitTests.csproj --no-restore --verbosity normal
        working-directory: .

      - name: Run Integration Tests
        run: dotnet test FlagExplorer.IntegrationTests/FlagExplorer.IntegrationTests.csproj --no-restore --verbosity normal
        working-directory: .

      # Docker build and push for backend (if main branch)
      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Use the correct path to your Dockerfile
      - name: Build and push backend Docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./FlagExplorer.Api/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.API_DOCKER_IMAGE }}:latest
            ${{ env.ACR_NAME }}.azurecr.io/${{ env.API_DOCKER_IMAGE }}:${{ github.sha }}

  frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'flag-explorer-app/package-lock.json'

      - name: Install Dependencies
        working-directory: flag-explorer-app
        run: |
          npm cache clean --force
          rm -rf node_modules
          npm install --legacy-peer-deps
          npm install @rollup/rollup-linux-x64-gnu --save-dev

      # Install Chrome for Karma tests
      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      
      - name: Check Chrome Installation
        run: |
          which google-chrome
          google-chrome --version

      # Run Angular unit tests with coverage
      - name: Run Frontend Tests
        working-directory: flag-explorer-app
        run: |
          export CHROME_BIN=$(which google-chrome)
          npm run test:ci

      - name: Build Frontend
        working-directory: flag-explorer-app
        run: npm run build

      # Docker build and push for frontend (if main branch)
      - name: Set up Docker Buildx
        if: github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v1

      - name: Login to Azure Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Create a Dockerfile in the frontend directory
      - name: Create frontend Dockerfile
        if: github.ref == 'refs/heads/main'
        run: |
          cd flag-explorer-app
          cat > Dockerfile << 'EOF'
          FROM nginx:alpine
          COPY dist/flag-explorer-app /usr/share/nginx/html
          EXPOSE 80
          CMD ["nginx", "-g", "daemon off;"]
          EOF

      # Build and push frontend Docker image
      - name: Build and push frontend Docker image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v2
        with:
          context: ./flag-explorer-app
          file: ./flag-explorer-app/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_NAME }}.azurecr.io/flagexplorer-frontend:latest
            ${{ env.ACR_NAME }}.azurecr.io/flagexplorer-frontend:${{ github.sha }}

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Backend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.API_WEBAPP_NAME }}
          images: ${{ env.ACR_NAME }}.azurecr.io/${{ env.API_DOCKER_IMAGE }}:${{ github.sha }}

      - name: Deploy Frontend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: flagexplorer-app  
          slot-name: 'production'
          creds: ${{ secrets.AZURE_CREDENTIALS }}  
          images: ${{ env.ACR_NAME }}.azurecr.io/flagexplorer-frontend:${{ github.sha }}   